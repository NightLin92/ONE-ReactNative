__d(function(e,t,n,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var i,r,o=t(377),s=babelHelpers.interopRequireDefault(o),d=t(12),l=babelHelpers.interopRequireDefault(d),p=t(38),u=p.Dimensions.get("window").width,c=.4*u,f=50,h=(r=i=function(e){function t(e){babelHelpers.classCallCheck(this,t);var n=babelHelpers.possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),a=new p.Animated.ValueXY,i=p.PanResponder.create({onMoveShouldSetPanResponderCapture:function(e,t){return Math.abs(t.dx)>f},onStartShouldSetPanResponder:function(){return!0},onPanResponderMove:function(e,t){a.setValue({x:t.dx,y:t.dy})},onPanResponderRelease:function(e,t){t.dx>c?n.forceSwipe("right"):t.dx<-c?n.forceSwipe("left"):n.resetPosition()}});return n.state={panResponder:i,position:a,index:0},n}return babelHelpers.inherits(t,e),babelHelpers.createClass(t,[{key:"componentWillReceiveProps",value:function(e){e.data!==this.props.data&&this.setState({index:0})}},{key:"componentWillUpdate",value:function(){p.UIManager.setLayoutAnimationEnabledExperimental&&p.UIManager.setLayoutAnimationEnabledExperimental(!0),p.LayoutAnimation.spring()}},{key:"forceSwipe",value:function(e){var t=this,n="right"===e?u:-u;p.Animated.timing(this.state.position,{toValue:{x:2*n,y:"right"===e?-n:n},duration:750}).start(function(){return t.onSwipeComplete(e)})}},{key:"onSwipeComplete",value:function(e){var t=this.props,n=t.onSwipeRight,a=t.onSwipeLeft,i=t.data,r=i[this.state.index];"right"===e?n(r):a(r),this.state.position.setValue({x:0,y:0}),this.setState({index:this.state.index+1})}},{key:"resetPosition",value:function(){p.Animated.spring(this.state.position,{toValue:{x:0,y:0}}).start()}},{key:"getCardStyle",value:function(){var e=this.state.position,t=e.x.interpolate({inputRange:[2*-u,0,2*u],outputRange:["-60deg","0deg","60deg"]});return babelHelpers.extends({},this.state.position.getLayout(),{transform:[{rotate:t}]})}},{key:"renderCards",value:function(){var e=this;return this.state.index>=this.props.data.length?this.props.renderNoMoreCards():this.props.data.map(function(t,n){return n<e.state.index?null:n===e.state.index?l.default.createElement(p.Animated.View,babelHelpers.extends({key:t.id,style:[e.getCardStyle(),y.cardStyle]},e.state.panResponder.panHandlers),e.props.renderCard(t)):l.default.createElement(p.Animated.View,{key:t.id,style:[y.cardStyle,{zIndex:0}]},e.props.renderCard(t))}).reverse()}},{key:"render",value:function(){return console.warn("Warning: SwipeDeck has been deprecated and will be removed in a future version of React Native Elements. To keep up with it's development you can check the project here(https://github.com/Monte9/react-native-tinder-cards)."),l.default.createElement(p.View,null,this.renderCards())}}]),t}(d.Component),i.defaultProps={onSwipeRight:function(){},onSwipeLeft:function(){}},r);a.default=h;var y=p.StyleSheet.create({cardStyle:{position:"absolute",width:u}});h.propTypes={data:s.default.any,renderCard:s.default.any,renderNoMoreCards:s.default.any,onSwipeRight:s.default.any,onSwipeLeft:s.default.any}},697);